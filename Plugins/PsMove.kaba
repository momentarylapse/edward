use api
use hui
use thread

class X
	bool holding
	quaternion q0
	ActionController* ac
	MultiViewWindow* win
	void __init__()
		holding = false
	
	void start_grab(PSMoveController m)
		print("start grab")
		holding = true
		ac = ed.cur_mode.multi_view.action_con
		win = ed.cur_mode.multi_view.active_win
		q0 = rel_ang(m)
		ac.start_action(win, 0)
	void end_grab()
		print("end grab")
		holding = false
		ac.end_action(true)
	quaternion rel_ang(PSMoveController m)
		return m.ang * win.local_ang.bar()
	void update_hold(PSMoveController m)
		let qq = rel_ang(m) * q0.bar()
		#print(qq.angles())
		ac.update_param(qq.angles())
	
	void step()
		psmove_update_tracker()
		#if ed.cur_mode.name == "ModelAnimationSkeleton"
		for m in psmoves
			if holding
				if m.trigger < 0.2
					end_grab()
				else
					update_hold(m)
			else
				if m.trigger > 0.7
					start_grab(m)
			#print(str(m.button))
			#print(m.ang)

void main()
	psmove_init_tracker()
	print("plugin: {{len(psmoves)}} controller found...")
	let x = new X()
	RunRepeated(0.07, x, X.step)

void _main()
	print(ed.cur_mode.name)
