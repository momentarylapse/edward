use edward

class NodeMaterial extends shader.Node
	void __init__()
		super.__init__("Material")
		output.add([shader.TYPE_COLOR, "albedo"])
		output.add([shader.TYPE_FLOAT, "roughness"])
		output.add([shader.TYPE_FLOAT, "metal"])
		output.add([shader.TYPE_COLOR, "emission"])
	override const string[] dependencies()
		return ["in:material"]
	override const string code_pixel(out shader.BuilderContext c)
		let al = c.create_out(self, 0)
		let ro = c.create_out(self, 1)
		let me = c.create_out(self, 2)
		let em = c.create_out(self, 3)
		return "
	vec4 {{al}} = material.albedo;
	float {{ro}} = material.roughness;
	float {{me}} = material.metal;
	vec4 {{em}} = material.emission;"
