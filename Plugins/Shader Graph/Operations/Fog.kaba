use edward

class NodeFog extends shader.Node
	func __init__()
		super.__init__("Fog")
		params.add([shader.TYPE_COLOR, "diffuse", "#ffffffff", ""])
		output.add([shader.TYPE_COLOR, "out"])
	func override const dependencies() -> string[]
		return ["in:fog", "in:pos", "in:matrix"]
	func override const code_pixel(out c: shader.BuilderContext) -> string
		var tt = c.create_temp(self, -1, shader.TYPE_FLOAT)
		var t = c.create_out(self, 0)
		return "
	float {{tt}} = exp(-(matrix.view * in_pos).z * fog.density);
	vec4 {{t}} = (1 - {{tt}}) * fog.color + {{tt}} * {{c.value(self, 0)}};"
