use "../../api.kaba"

class NodeBasicLighting extends ShaderNode
	void __init__()
		super.__init__("BasicLighting")
		params.add([SHADER_TYPE_COLOR, "diffuse", "#ffffffff", ""])
		params.add([SHADER_TYPE_FLOAT, "ambient", "0.3", "range=0:1"])
		params.add([SHADER_TYPE_FLOAT, "specular", "0.1", "range=0:1"])
		params.add([SHADER_TYPE_FLOAT, "shininess", "10.0", "range=0:50"])
		params.add([SHADER_TYPE_COLOR, "emission", "#000000ff", ""])
		params.add([SHADER_TYPE_VEC3, "normals", "-mesh-", ""])
		output.add([SHADER_TYPE_COLOR, "out"])
	override string[] dependencies()
		return ["basic_lighting", "light", "matview", "matworld", "material", "pos", "normal"]
	override string code_pixel(ShaderBuilderContext c)
		let n = c.build_value(self, 5, "in_normal")
		let di = c.value(self, 0)
		let am = c.value(self, 1)
		let sp = c.value(self, 2)
		let sh = c.value(self, 3)
		let em = c.value(self, 4)
		string t = c.create_out(self, 0)
		return "
	vec4 {{t}} = basic_lighting({{n}}, {{di}}, {{am}}, {{sp}}, {{sh}}, {{em}});"
