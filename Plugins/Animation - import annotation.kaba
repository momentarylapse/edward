use "api.kaba"
use "helper.kaba"

float scale
int anim_index

vector imp(int[] r, int i)
	return vector(-r[i*2]/scale, -r[i*2+1]/scale, 0)

void import_frame(int[] r, int frame_no)
	vector[] pos
	quaternion[] ang
	for b,i in data_model.bone
		pos.add(v_0)
		ang.add(q_id)
	for b,i in data_model.bone
		if b.parent < 0
			pos[i] = imp(r, i) - data_model.bone[i].pos
		else
			int p = b.parent
			vector bdpos = data_model.bone[i].pos - data_model.bone[p].pos
			vector dp = imp(r, i) - imp(r, p)
			float ff = dp.length() / bdpos.length()
			if ff < 1
				dp.z = sqrt(bdpos.length_sqr() - dp.length_sqr())
			let q = rot_onto(bdpos, dp)
			ang[p] = q
	for b,i in data_model.bone
			data_model.animation_set_bone(anim_index, frame_no, i, pos[i], ang[i].angles())

void guess_scale(int[] r, int num_frames, int num_bones)
	float weight = 0
	float ss = 0
	for b,i in data_model.bone
		if i >= num_bones
			break
		if b.parent < 0
			continue
		vector dpos = b.pos - data_model.bone[b.parent].pos
		float w = dpos.length()
		weight += w
		float ml = 0
		for f in 0:num_frames
			int i0 = f*num_bones*2
			int dx = r[i0 + i*2] - r[i0 + b.parent*2]
			int dy = r[i0 + i*2+1] - r[i0 + b.parent*2+1]
			float l = sqrt(dx*dx + dy*dy)
			ml = max(ml, l)
		ss += ml
	scale = ss / weight * 0.8
	print("scale: " + scale)

void _import(string filename)
	let f = FileOpenText(filename)
	string t
	int num_bones, num_frames
	// bones
	f >> t
	f >> num_bones
	f >> t
	// images
	f >> t
	f >> t
	// frames
	f >> t
	f >> num_frames
	// annotation
	f >> t
	int[] r
	for i in 0:num_bones*2*num_frames
		int k
		f >> k
		r.add(k)
	anim_index = 43
	data_model.BeginActionGroup("import-animation")
	data_model.add_animation(anim_index, MOVE_TYPE_SKELETAL)
	data_model.animation_set_data(anim_index, "new", 5, 0)
	guess_scale(r, num_frames, num_bones)
	for i in 0:num_frames
		print("------------frame")
		if i > 0
			data_model.animation_add_frame(anim_index, i, data_model.move[anim_index].frame[0])
		import_frame(r[num_bones*2*i:num_bones*2*(i+1)], i)
	data_model.EndActionGroup()
	delete f

void main()
	_import("/home/michi/Projekte/Edward/a1")
	return
	if !HuiFileDialogOpen(edward, "", "", "*", "*")
		return
	_import(HuiFilename)

		