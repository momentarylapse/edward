use "../api.kaba"

const int MAX_LENGTH = 12
const float BRANCH_PROB = 2.8
const float BRANCH_FACTOR = 0.7
const float BRANCH_ANGLE = 0.5
const float DIR_RAND = 0.2

vector get_rotated(vector dir)
	vector v1 = vector.cross(dir, vector.EX).normalized()
	vector v2 = vector.cross(dir, v1)
	float w = rand(2 * pi)
	vector bdir = (dir * 0.5 + cos(w) * v1 + sin(w) * v2).normalized()
	return bdir

void branch(vector pos0, vector dir0, int num, float radius, float length)
	vector dir = dir0
	vector p = pos0
	vector[] pos
	pos.add(pos0)
	for i in 1:num
		dir.x += rand(DIR_RAND * 2) - DIR_RAND
		dir.y += 0.5
		dir.z += rand(DIR_RAND * 2) - DIR_RAND
		dir = dir.normalized()
		p += dir * length
		pos.add(p)
		
		if rand(1) < BRANCH_PROB
			vector bdir = get_rotated(dir)
			int bnum = (num - i + 0.5) * BRANCH_FACTOR
			if bnum > 1
				branch(p, bdir, bnum, radius / num * bnum, length)
	float[] r
	r.add(radius)
	r.add(0)
	Geometry *g = new GeometryCylinderComplex(pos, r, 5, 16, 0)
	data_model.PasteGeometry(*g, 0)
	delete(g)

void main()
	branch(vector.0, vector.EY, MAX_LENGTH, 5, 40)
