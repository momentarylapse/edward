use hui
use edward

Dialog *dlg

void CreateTorusKnot(int nx, int ny, int rings, int edges, float r1, float r2, float r3)
	Geometry *g = new GeometryTorusKnot(vector.0, vector.EZ, r1, r2, r3, nx, ny, rings, edges)
	data_model.paste_geometry(*g, 0)
	del g

int gcd(int _a, int _b)
	int a = _a
	int b = _b
	while b != 0
		int t = b
		b = a % b
		a = t
	return a

void OnOk()
	int nx = dlg.get_int("nx")
	int ny = dlg.get_int("ny")
	if gcd(nx, ny) != 1
		hui.error_box(dlg, "Error", "GreatestCommonDivisor(Loops, Twists) = 1 violated")
	else
		CreateTorusKnot(nx, ny, dlg.get_int("rings"), dlg.get_int("edges"), dlg.get_float("radius1"), dlg.get_float("radius2"), dlg.get_float("radius3"))
		del dlg

void main()
	dlg = new Dialog("Torus Knot", 300, 300, edward, false)
	dlg.add_grid("", 0, 0, "table")
	dlg.set_target("table")
	dlg.add_label("Loops", 0, 0, "")
	dlg.add_spin_button("3\\1", 1, 0, "nx")
	dlg.add_label("Twists", 0, 1, "")
	dlg.add_spin_button("7\\1", 1, 1, "ny")
	dlg.add_label("Edges", 0, 2, "")
	dlg.add_spin_button("8\\1", 1, 2, "edges")
	dlg.add_label("Rings", 0, 3, "")
	dlg.add_spin_button("100\\1", 1, 3, "rings")
	dlg.add_label("Radius Torus (outer)", 0, 4, "")
	dlg.add_spin_button("100\\0\\100000000000000\\0.1", 1, 4, "radius1")
	dlg.add_label("Radius Torus (inner)", 0, 5, "")
	dlg.add_spin_button("40\\0\\100000000000000\\0.1", 1, 5, "radius2")
	dlg.add_label("Radius Knot", 0, 6, "")
	dlg.add_spin_button("15\\0\\100000000000000\\0.1", 1, 6, "radius3")
	dlg.add_button("Ok", 1, 7, "ok")
	
	dlg.event("ok", OnOk)
	
	dlg.run()
