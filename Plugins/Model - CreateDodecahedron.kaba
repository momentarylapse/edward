use "api.kaba"

const float R = 20.0

void add5(int nv, int v0, int v1, int v2, int v3, int v4)
	int[] v
	v.add(nv + v0)
	v.add(nv + v1)
	v.add(nv + v2)
	v.add(nv + v3)
	v.add(nv + v4)
	data_model.AddPolygon(v, 0)

void main()
	int nv = data_model.vertex.num
	
	data_model.BeginActionGroup("CreateDodecahedron")
	
	float phi = (1 + sqrt(5))/2
	data_model.AddVertex(vector( 1, 1, 1)*R, 0, -1)
	data_model.AddVertex(vector( 1, 1,-1)*R, 0, -1)
	data_model.AddVertex(vector( 1,-1, 1)*R, 0, -1)
	data_model.AddVertex(vector( 1,-1,-1)*R, 0, -1)
	data_model.AddVertex(vector(-1, 1, 1)*R, 0, -1)
	data_model.AddVertex(vector(-1, 1,-1)*R, 0, -1)
	data_model.AddVertex(vector(-1,-1, 1)*R, 0, -1)
	data_model.AddVertex(vector(-1,-1,-1)*R, 0, -1)
	data_model.AddVertex(vector(0, 1/phi, phi)*R, 0, -1)
	data_model.AddVertex(vector(0, 1/phi,-phi)*R, 0, -1)
	data_model.AddVertex(vector(0,-1/phi, phi)*R, 0, -1)
	data_model.AddVertex(vector(0,-1/phi,-phi)*R, 0, -1)
	data_model.AddVertex(vector( 1/phi, phi,0)*R, 0, -1)
	data_model.AddVertex(vector( 1/phi,-phi,0)*R, 0, -1)
	data_model.AddVertex(vector(-1/phi, phi,0)*R, 0, -1)
	data_model.AddVertex(vector(-1/phi,-phi,0)*R, 0, -1)
	data_model.AddVertex(vector( phi,0, 1/phi)*R, 0, -1)
	data_model.AddVertex(vector(-phi,0, 1/phi)*R, 0, -1)
	data_model.AddVertex(vector( phi,0,-1/phi)*R, 0, -1)
	data_model.AddVertex(vector(-phi,0,-1/phi)*R, 0, -1)
	add5(nv, 14, 12, 1, 9, 5)
	add5(nv, 12, 14, 4, 8, 0)
	add5(nv, 13, 15, 7, 11, 3)
	add5(nv, 15, 13, 2, 10, 6)
	add5(nv, 16, 18, 1, 12, 0)
	add5(nv, 18, 16, 2, 13, 3)
	add5(nv, 19, 17, 4, 14, 5)
	add5(nv, 17, 19, 7, 15, 6)
	add5(nv, 9, 11, 7, 19, 5)
	add5(nv, 11, 9, 1, 18, 3)
	add5(nv, 10, 8, 4, 17, 6)
	add5(nv, 8, 10, 2, 16, 0)
		
	data_model.EndActionGroup()
	
	data_model.SelectOnlySurface(data_model.surface[data_model.surface.num - 1])
	